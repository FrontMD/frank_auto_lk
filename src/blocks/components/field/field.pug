-
    const defaultFieldProps = {
        classes: '',
        tag: 'input',
        type: 'text',
        title: '',
        textareaRows: '8',
        placeholder: '',
        radioCheckboxImg: '',
        radioCheckboxImg2: '',
        radioCheckboxColor: '',
        radioCheckboxText: '',
        inputAttr: {},
        selectOptions: [
            "вариант 1",
            "вариант 2"
        ],
        isDouble: false,
        placeholder2: '',
        selectOptions2: '',
        inputAttr2: {}
    }

mixin field(props = defaultFieldProps)
    -
        const checkProps = {
            classes: props.classes ? props.classes : defaultFieldProps.classes,
            tag: props.tag ? props.tag : defaultFieldProps.tag,
            type: props.type ? props.type : defaultFieldProps.type,
            title: props.title ? props.title : defaultFieldProps.title,
            textareaRows: props.textareaRows ? props.textareaRows : defaultFieldProps.textareaRows,
            placeholder: props.placeholder ? props.placeholder : defaultFieldProps.placeholder,
            radioCheckboxImg: props.radioCheckboxImg ? props.radioCheckboxImg : defaultFieldProps.radioCheckboxImg,
            radioCheckboxImg2: props.radioCheckboxImg2 ? props.radioCheckboxImg2 : defaultFieldProps.radioCheckboxImg2,
            radioCheckboxColor: props.radioCheckboxColor ? props.radioCheckboxColor : defaultFieldProps.radioCheckboxColor,
            radioCheckboxText: props.radioCheckboxText ? props.radioCheckboxText : defaultFieldProps.radioCheckboxText,
            inputAttr: props.inputAttr ? props.inputAttr : defaultFieldProps.inputAttr,
            selectOptions: props.selectOptions ? props.selectOptions : defaultFieldProps.selectOptions,
            isDouble: props.isDouble ? props.isDouble : defaultFieldProps.isDouble,
            placeholder2: props.placeholder2 ? props.placeholder2 : defaultFieldProps.placeholder2,
            inputAttr2: props.inputAttr2 ? props.inputAttr2 : defaultFieldProps.inputAttr2,
            selectOptions2: props.selectOptions2 ? props.selectOptions2 : defaultFieldProps.selectOptions2
        }


    .field(class= `${checkProps.classes} 
    ${checkProps.isDouble ? "field--double" : ""} 
    ${checkProps.type === 'radio' ? 'field--radio' : ''} 
    ${checkProps.type === 'checkbox' ? 'field--checkbox' : ''}` 
    data-js='formField')&attributes(attributes)
        label
            - if(checkProps.tag === 'input')
                input.field__input(type=checkProps.type placeholder=checkProps.placeholder)&attributes(checkProps.inputAttr)
                - if(checkProps.type === 'radio')
                    - let isImg = checkProps.radioCheckboxImg.length > 0 ? true : false
                    - let isImg2 = checkProps.radioCheckboxImg2.length > 0 ? true : false
                    - let isColor = checkProps.radioCheckboxColor.length > 0 ? true : false

                    - if(isColor === true)
                        span.fake-radio.fake-radio--color(style=checkProps.radioCheckboxColor)
                            svg
                                use(xlink:href=`img/sprites/sprite.svg#check`)
                    - else if(isImg === true)
                        span.fake-radio.fake-radio--img
                            img(src=checkProps.radioCheckboxImg, alt="")
                            span.fake-radio__check
                    - else if(isImg2 === true)
                        span.fake-radio.fake-radio--img2
                            img(src=checkProps.radioCheckboxImg2, alt="")
                            span.fake-radio__check
                                svg
                                    use(xlink:href=`img/sprites/sprite.svg#check`)
                    - else
                        span.fake-radio

                - else if(checkProps.type === 'checkbox')
                    - if (checkProps.radioCheckboxText.length > 0)
                        span.fake-checkbox.fake-checkbox--text
                            span.fake-checkbox__square
                                svg
                                    use(xlink:href=`img/sprites/sprite.svg#check`)
                            span.fake-checkbox__text!= checkProps.radioCheckboxText
                    - else
                        - if(checkProps.title.length > 0)
                            span.field__title!= checkProps.title
                        span.fake-checkbox
                    span.field__error(data-js='fieldError')

                - else
                    span.field__error(data-js='fieldError')

            - if(checkProps.tag === 'textarea')
                textarea.field__textarea(rows=checkProps.textareaRows placeholder=checkProps.placeholder)&attributes(checkProps.inputAttr)
                span.field__error(data-js='fieldError')

            - if(checkProps.tag === 'select')
                select.field__select(data-placeholder=checkProps.placeholder data-js='formSelect')&attributes(checkProps.inputAttr)
                    - let optionCount = 0
                    - while (optionCount < checkProps.selectOptions.length)
                        - if(checkProps.selectOptions[optionCount].length > 0)
                            option(value=checkProps.selectOptions[optionCount])!= checkProps.selectOptions[optionCount]
                        - else
                            option(label=" ")!= checkProps.selectOptions[optionCount]
                        - optionCount++
                span.field__error(data-js='fieldError')

        -if(checkProps.isDouble == true)
            label
                - if(checkProps.tag === 'input')
                    input.field__input.field__input--second(type=checkProps.type placeholder=checkProps.placeholder2)&attributes(checkProps.inputAttr2)
                    span.field__error(data-js='fieldError')

                - if(checkProps.tag === 'select')
                    select.field__select.field__select--second(data-placeholder=checkProps.placeholder2 data-js='formSelect')&attributes(checkProps.inputAttr2)
                        - let optionCount = 0
                        - while (optionCount < checkProps.selectOptions2.length)
                            - if(checkProps.selectOptions2[optionCount].length > 0)
                                option(value=checkProps.selectOptions2[optionCount])!= checkProps.selectOptions2[optionCount]
                            - else
                                option(label=" ")!= checkProps.selectOptions2[optionCount]
                            - optionCount++
                    span.field__error(data-js='fieldError')



